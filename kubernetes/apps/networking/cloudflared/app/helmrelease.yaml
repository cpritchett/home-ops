---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudflared
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      cloudflared:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        serviceAccount:
          name: cloudflared
        initContainers:
          generate-config:
            image:
              repository: ghcr.io/home-operations/kubectl
              tag: 1.31.4@sha256:8da088399f96c65ab0e2c87edc9a5f5e99c699f3f1a1f8e1e0efe659e2a91f723
            command:
              - /scripts/generate-config.sh
            volumeMounts:
              - name: config
                mountPath: /etc/cloudflared
              - name: scripts
                mountPath: /scripts
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }
        containers:
          app:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2025.8.0@sha256:eb5c9324efe3b8e8a48612423dd912f76fa93cf138923e7eda5d1a9805057757 # trunk-ignore(checkov/CKV_SECRET_6): legitimate container image SHA
            args:
              - tunnel
              - run
            env:
              NO_AUTOUPDATE: true
              TUNNEL_METRICS: 0.0.0.0:2000
              TUNNEL_ORIGIN_ENABLE_HTTP2: true
              TUNNEL_POST_QUANTUM: true
              TUNNEL_TRANSPORT_PROTOCOL: quic
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: &port 2000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }
    defaultPodOptions:
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
    persistence:
      config:
        type: emptyDir
        globalMounts:
          - path: /etc/cloudflared
      scripts:
        type: configMap
        name: "{{ .Release.Name }}-scripts"
        defaultMode: 0755
        globalMounts:
          - path: /scripts/generate-config.sh
            subPath: generate-config.sh
            readOnly: true
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        endpoints:
          - port: http
